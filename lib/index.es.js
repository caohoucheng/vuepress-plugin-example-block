var k=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports);var v=k((_,h)=>{const E=require("fs"),l=require("chalk"),{hash:C,path:c}=require("@vuepress/utils"),N=require("chokidar"),f=require("./utils/markdown"),s=require("./prepareClientAppEnhanceFile"),t="vuepress-plugin-example-block";h.exports=(e={})=>r=>{if(!e.path)throw console.log(l.green`[${t}]:找不到组件目录,请设置插件配置`+"({path:__dirname})"),Error(`[${t}]:not find componentsDir,please BlockDemo({path:__dirname})`);const o=c.resolve(e.path,e.dir||"../examples"),p=["**/*.vue"];if(!E.existsSync(o))throw console.log(l.green`[${t}]:组件路径不存在 目录${o}`),Error(`[${t}]:component path does not exist ( dir:${o} )`);e=Object.assign({components:{},componentsDir:o,componentsPatterns:p,getComponentName:n=>c.trimExt(n.replace(/\/|\\/g,"-"))},e);const{componentsDir:i,componentsPatterns:m}=e;return{name:t,clientConfigFile:c.resolve(e.path,".temp/client.js"),onInitialized:()=>{s(r,e)},extendsMarkdown:n=>{n.use(f(e,n))},onWatched:(n,u,w)=>{if(i){const a=N.watch(m,{cwd:i,ignoreInitial:!0});a.on("unlink",(d,g)=>{s(n,e)}),a.on("change",(d,g)=>{s(n,e)}),u.push(a)}}}}});export default v();
